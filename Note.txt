import React from "react";
import { BrowserRouter } from "react-router-dom";
import { useState } from "react";
import { CartProvider } from "./Context/CartContext";
import IntroCarousel from "../src/components/Home/IntroCarousel"
import Navigation from "./components/Navigation/Nav";
import Products from "./components/Products/Products";
import Footer from "./components/Footer/Footer";
import Sidebar from "./Sidebar/Sidebar";
import Cart from "./components/Cart/Cart";
import Recommended from "./Recommended/Recommended";
import Card from "./components/Product/Card";
import products from "./db/data";
import "./index.css";

function App() {
  const [selectedCategory, setSelectedCategory] = useState(null);
  const [query, setQuery] = useState("");
  const [isCartVisible, setCartVisible] = useState(false);

  const handleInputChange = (event) => {
    setQuery(event.target.value);
  };

  const handleChange = (event) => {
    setSelectedCategory(event.target.value);
  };

  const handleClick = (event) => {
    setSelectedCategory(event.target.value);
  };

  const toggleCartVisibility = () => {
    setCartVisible((prevVisible) => !prevVisible);
    document.body.classList.toggle("no-scroll", !isCartVisible);
  };

  const filteredData = (products, selected, query) => {
    return products
      .filter(product =>
        (!query || product.title.toLowerCase().includes(query.toLowerCase())) &&
        (!selected || [product.category, product.color, product.company, product.newPrice, product.title].includes(selected))
      )
      .map(({ id, img, title, star, reviews, prevPrice, newPrice }) => (
        <Card
          key={id}
          id={id}
          img={img}
          title={title}
          star={star}
          reviews={reviews}
          prevPrice={prevPrice}
          newPrice={newPrice}
        />
      ));
  };

  const result = filteredData(products, selectedCategory, query);

  return (
    <BrowserRouter>
      <CartProvider>
        <IntroCarousel />
        <div className="main-container">
          <Sidebar handleChange={handleChange} />
          <div className="product-list">
            <Products />
          </div>
          <Navigation
            query={query}
            handleInputChange={handleInputChange}
            toggleCart={toggleCartVisibility}
          />
          <div className="flex">
            <Recommended handleClick={handleClick} />
            <Products result={result} />
          </div>

          <Cart isVisible={isCartVisible} onClose={toggleCartVisibility} />
        </div>
        <Footer />
      </CartProvider>
    </BrowserRouter>
  );
}

export default App;



=============================
import React from 'react';
import data from '../../db/data';
import "../../styles/Featured.css";
import { FaShoppingCart } from "react-icons/fa";
import { useCart } from '../../Context/CartContext';

const Featured = () => {
    const { addToCart } = useCart();

    return (
        <div className="featured-container">
            <h2 className='double-line heading'>Featured Products</h2>
            
            {/* Top 5 Products */}
            <div className="product-gallery">
                {data.slice(2, 8).map((item) => (
                    <article key={item.id} className="product-card">
                        <img src={item.img} alt={item.title} className="product-image" />
                        <h2 className="product-title">{item.title}</h2>
                        <p className="product-company">Brand: {item.company}</p>
                        <p className="product-price">₦{item.newPrice}</p>
                        <div className='gallery-btm'>
                            <button onClick={() => addToCart(item)} className="add-to-cart-btn">
                                <FaShoppingCart className="cart-icon" />
                                Add to Cart
                            </button>
                        </div>
                    </article>
                ))}
            </div>
                        {/* Bottom 2 Featured Products with alternating text and image positions */}
            <div className="featured-products">
                {data.slice(7, 9).map((item, index) => (
                    <article
                        key={item.id}
                        className={`featured-product ${index % 2 === 0 ? 'text-right' : 'text-left'}`}
                    >
                        {/* Conditional layout based on index */}
                        {index % 2 === 0 ? (
                            <>
                                <div className="featured-details">
                                    <h3 className="featured-title">New Series: {item.title}</h3>
                                    <h5 className='small'>Exclusive Savings</h5>
                                    <p className="featured-price">₦{item.newPrice}</p>
                                </div>
                                <img src={item.img} alt={item.title} className="featured-image" />
                            </>
                        ) : (
                            <>
                                <img src={item.img} alt={item.title} className="featured-image" />
                                <div className="featured-details">
                                    <h3 className="featured-title">New Series: {item.title}</h3>
                                    <h5 className='small'>The power of light</h5>
                                    <p className="featured-price">₦{item.newPrice}</p>
                                </div>
                            </>
                        )}
                    </article>
                ))}
            </div>
        </div>
    );
};

export default Featured;
